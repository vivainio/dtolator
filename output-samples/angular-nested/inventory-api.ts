// Generated by dtolator --from-openapi full-sample.json --angular
// Do not modify manually

import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { fillUrl } from './fill-url';
import {
  Inventory,
  InventoryLevelsQueryParams,
  InventoryResponse,
  UpdateInventoryRequest,
} from './dto';

@Injectable({ providedIn: 'root' })
export class InventoryApi {
  constructor(private http: HttpClient) {}

  /**
   * Get Inventory Levels
   *
   * @param queryParams - Query parameters object
   * @param queryParams.lowStock - optional parameter of type boolean
   * @param headers - Optional custom HTTP headers
   * @returns Observable<InventoryResponse> - Inventory levels
   */
  getInventoryLevels(queryParams?: InventoryLevelsQueryParams, headers?: HttpHeaders): Observable<InventoryResponse> {
    const url = fillUrl('/inventory', {}, queryParams || {});
    return this.http.get<InventoryResponse>(url, { headers });
  }

  /**
   * Update Product Inventory
   *
   * @param productId - Path parameter of type string
   * @param dto - Request body of type UpdateInventoryRequest
   * @param headers - Optional custom HTTP headers
   * @returns Observable<Inventory> - Inventory updated
   */
  updateProductInventory(productId: string, dto: UpdateInventoryRequest, headers?: HttpHeaders): Observable<Inventory> {
    const url = fillUrl('/inventory/{productId}', { productId: productId }, {});
    return this.http.put<Inventory>(url, dto, { headers });
  }

}

