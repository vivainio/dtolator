# Generated by dtolator --openapi simple-sample.json --python-dict
# Do not modify manually

from typing import TypedDict, Optional, Union, List, Dict, Any
from enum import Enum
from datetime import datetime

class UserRequired(TypedDict):
    id: int
    email: str
    name: str


class User(UserRequired, total=False):
    age: int
    isActive: bool
    tags: List[str]
    status: Literal["active", "inactive", "pending"]
    profile: UserProfile
    address: Address

class UserProfileRequired(TypedDict):
    firstName: str
    lastName: str


class UserProfile(UserProfileRequired, total=False):
    phoneNumber: Optional[str]
    avatar: Optional[str]
    bio: Optional[str]

class AddressRequired(TypedDict):
    street: str
    city: str
    country: str


class Address(AddressRequired, total=False):
    state: Optional[str]
    postalCode: Optional[str]

class CreateUserRequestRequired(TypedDict):
    email: str
    name: str
    profile: UserProfile


class CreateUserRequest(CreateUserRequestRequired, total=False):
    age: Optional[int]
    address: Address

class ApiResponseRequired(TypedDict):
    success: bool


class ApiResponse(ApiResponseRequired, total=False):
    message: str
    data: User


