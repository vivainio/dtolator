// Generated by dtolator --from-openapi simple-sample.json --angular --promises
// Do not modify manually

type ParamValue = string | number | boolean | null | undefined;

export function fillUrl<T extends Record<string, any> = Record<string, ParamValue>>(
  url: string,
  params?: Record<string, ParamValue>,
  queryParams?: T,
): string {
  // Substitute path parameters - more efficient than regex for simple replacements
  if (params) {
    for (const [key, value] of Object.entries(params)) {
      if (value != null) {
        // Replace :param patterns, handling both end-of-string and followed by /
        const paramPattern = `:${key}`;
        let index = url.indexOf(paramPattern);
        while (index !== -1) {
          const nextChar = url[index + paramPattern.length];
          if (nextChar === undefined || nextChar === '/') {
            url = url.slice(0, index) + String(value) + url.slice(index + paramPattern.length);
            index = url.indexOf(paramPattern, index + String(value).length);
          } else {
            index = url.indexOf(paramPattern, index + 1);
          }
        }
      }
    }
  }

  // Build query string efficiently without intermediate arrays
  if (queryParams) {
    const queryParts: string[] = [];
    for (const [key, value] of Object.entries(queryParams)) {
      if (value != null) {
        queryParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);
      }
    }
    
    if (queryParts.length > 0) {
      url += `?${queryParts.join('&')}`;
    }
  }

  // Get API base URL with improved error messaging
  const apiConfig = (globalThis as any).API_URL || (window as any)?.API_URL;
  if (!apiConfig) {
    throw new Error(
      'API_URL is not configured. Please set the global API_URL variable to your backend API base URL.\n' +
      'Examples:\n' +
      '  • Browser: (window as any).API_URL = "https://api.example.com";\n' +
      '  • Node.js: (globalThis as any).API_URL = "https://api.example.com";'
    );
  }

  // Ensure proper URL joining (handle trailing/leading slashes)
  const baseUrl = apiConfig.replace(/\/+$/, '');
  const path = url.startsWith('/') ? url : `/${url}`;
  
  return `${baseUrl}${path}`;
}
