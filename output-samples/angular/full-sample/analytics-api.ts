// Generated by dtolator --from-openapi full-sample.json --zod --angular
// Do not modify manually

import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import { z } from 'zod';
import { subsToUrl } from './subs-to-url.func';
import {
  ProductAnalytics,
  ProductAnalyticsSchema,
  SalesAnalytics,
  SalesAnalyticsSchema,
} from './dto';

@Injectable({ providedIn: 'root' })
export class AnalyticsApi {
  constructor(private http: HttpClient) {}

  /**
   * Get Sales Analytics
   *
   * @param queryParams - Query parameters object
   * @param queryParams.startDate - optional parameter of type string
   * @param queryParams.endDate - optional parameter of type string
   * @returns Observable<SalesAnalytics> - Sales analytics data
   */
  getSalesAnalytics(queryParams?: { startDate?: string, endDate?: string }): Observable<SalesAnalytics> {
    const url = subsToUrl('/analytics/sales', {}, queryParams || {});
    return this.http.get<SalesAnalytics>(url)
      .pipe(
        map(response => SalesAnalyticsSchema.parse(response))
      );
  }

  /**
   * Get Product Analytics
   *
   * @returns Observable<ProductAnalytics> - Product analytics data
   */
  getProductAnalytics(): Observable<ProductAnalytics> {
    const url = subsToUrl('/analytics/products', {}, {});
    return this.http.get<ProductAnalytics>(url)
      .pipe(
        map(response => ProductAnalyticsSchema.parse(response))
      );
  }

}

