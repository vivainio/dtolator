name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-docs-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-docs-
    
    - name: Build documentation
      run: cargo doc --no-deps --document-private-items
    
    - name: Create index.html for docs
      run: |
        echo '<!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>dtolator Documentation</title>
            <meta http-equiv="refresh" content="0; url=dtolator/index.html">
        </head>
        <body>
            <p><a href="dtolator/index.html">Redirect to documentation</a></p>
        </body>
        </html>' > target/doc/index.html
    
    - name: Setup Pages
      id: pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: target/doc

  deploy-docs:
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build dtolator
      run: cargo build --release
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install TypeScript
      run: npm install -g typescript @types/node
    
    - name: Validate README examples
      run: |
        # Test basic usage examples from README
        ./target/release/dtolator -i simple-sample.json --typescript > test-readme-ts.ts
        ./target/release/dtolator -i simple-sample.json --pydantic > test-readme.py
        ./target/release/dtolator -i simple-sample.json --dotnet > test-readme.cs
        
        # Validate TypeScript output compiles
        tsc --noEmit --skipLibCheck test-readme-ts.ts
        
        # Clean up
        rm -f test-readme-ts.ts test-readme.py test-readme.cs 